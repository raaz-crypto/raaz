#
# The list of raaz packages to build. The order of listing the
# packages is important as the packages are unregistered in the order
# given below. When in doubt arrange it in the reverse order of
# dependency, i.e if a package foo depends on bar then list foo before
# bar. In any case make sure that raaz-config is the last in this
# list.

PACKAGES= raaz raaz-random raaz-cipher \
          raaz-hash raaz-ssh raaz-benchmarks \
          raaz-core raaz-modular raaz-curves

ROOTDIR=$(abspath .)


# Do not edit this file beyond this point unless you know what you are
# doing.

# The targets provided by this make file are the following:

.PHONY: install # Installs all the packages.
.PHONY: clean   # removes all the packages and cleans up the dirs.
.PHONY: tests   # Runs the tests. Assumes that install is already done.
.PHONY: echo-variables        # Shows make variables. mainly for debugging
.PHONY: travis-before-install # Sets up the travis environment.
.PHONY: travis-cabal-config   # Sets up the travis cabal config file
.PHONY: hlint       # runs hlint on the sources
.PHONY: src-tarball # Create source tarballs
.PHONY: scripts     # builds the scripts in the scripts directory
.PHONY: tags        # create the ctags and etags files

#
# For each package we have a target with the same name and a target
# with the suffix clean. The former builds the package and the latter
# cleans it up. The Makefile.configure should set the variable
# PACKAGES variable and add rules to capture dependencies between the
# package targets (see the comments in Makefile.configure). The
# cleaning targets are auto generated from them.
#

PACKAGE_CLEAN=$(addsuffix -clean, ${PACKAGES})

.PHONY: ${PACKAGE_CLEAN}



# Include the platform specific configurarions from the platform make
# file.

ifdef HASKELL_PLATFORM
include platform/${HASKELL_PLATFORM}/Makefile.configure
endif


# Sets up the cabal config. The directory platform contains the cabal
# config file to use for each platform. Typically you need to put the
# package constraints there. The platform/default.cabal.conf contains
# the default config to use.


# In travis builds you can set particular versions of the compiler. In
# particular, the platform specific Makefile.configure should set the
# appropriate GHC version.

ifdef GHC_VERSION

GHC_PKG=ghc-${GHC_VERSION}
PATH:=/opt/ghc/${GHC_VERSION}/bin:${PATH}

else

GHC_PKG=ghc

endif

ifdef CABAL_VERSION

CABAL_PKG=cabal-install-${CABAL_VERSION}
CABAL=cabal-${CABAL_VERSION}

else

CABAL_PKG=cabal-install
CABAL=cabal

endif

ifeq ($(strip ${PARALLEL_BUILDS}),yes)
PARALLEL_OPTS=-j
else
PARALLEL_OPTS=
endif



# Setting the cabal install DEPENDENCIES
DEPENDENCIES=$(foreach cons, ${PACKAGE_CONSTRAINTS}  \
	                     ${ADDITIONAL_CONSTRAINTS}\
	,--constraint='${cons}' )

# Package tarballs. We install directly from the tarballs
RAAZ_TAR_GZ=$(foreach pkg, ${PACKAGES}, \
	$(wildcard ${ROOTDIR}/${pkg}/dist/*.tar.gz))

CABAL_INSTALL= ${CABAL} install ${DEPENDENCIES}

scripts:
	make -C scripts all

echo-variables:
	@echo Makefile variables.
	@echo -e '\t'ghc-pkg,cabal-pkg: ${GHC_PKG} ${CABAL_PKG}
	@echo -e '\t'CABAL=${CABAL}
	@echo -e '\t'PARALLEL_OPTS=${PARALLEL_OPTS}
	@echo -e '\t'GHC_VERSION=${GHC_VERSION}
	@echo -e '\t'HASKELL_PLATFORM=${HASKELL_PLATFORM}
	@echo -e '\t'PARALLEL_BUILDS=${PARALLEL_BUILDS}
	@echo -e '\t'DEPENDENCIES: ${DEPENDENCIES}
	@echo -e '\t'RAAZ_TAR_GZ: ${RAAZ_TAR_GZ}

install: src-tarball
	${CABAL_INSTALL} ${PARALLEL_OPTS} --enable-tests \
		--only-dependencies \
		${RAAZ_TAR_GZ}
	${CABAL_INSTALL} --enable-tests --enable-benchmarks \
		 --enable-documentation \
		${RAAZ_TAR_GZ}
	@echo User packages installed
	ghc-pkg list --user

tests:
	$(foreach pkg, ${PACKAGES},\
		cd ${pkg};\
		${CABAL} test;\
		cd ..;\
		)

src-tarball:
	cd raaz-core; \
	   ${CABAL_INSTALL} ${PARALLEL_OPTS} --enable-tests \
		--only-dependencies; \
	   ${CABAL} configure;\
	   cd ..
	$(foreach pkg, ${PACKAGES},\
		  cd ${pkg};\
		  ${CABAL} sdist;\
		  cd ..;\
		)


clean:   ${PACKAGE_CLEAN}

${PACKAGE_CLEAN}:
	cd $(patsubst %-clean,%,$@);\
	./Setup.lhs clean;\
	cd ..
	-ghc-pkg unregister  $(patsubst %-clean,%,$@) --force

#
#  Travis platform setup
#

travis-before-install:
	@echo System: `uname -a`
	sudo add-apt-repository -y ppa:hvr/ghc
	sudo apt-get update
	sudo apt-get install ${CABAL_PKG} ${GHC_PKG} happy haddock
	${CABAL} update

#
#  Stuff that checks the coding style
#

hlint:
	hlint ${PACKAGES}

tags:
	hasktags -b -S".hs,.lhs,hsc" .
