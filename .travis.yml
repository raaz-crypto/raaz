notifications:
  irc: "irc.freenode.net#haskell-raaz"
env:
  # Variables.
  # 1. GHC_VERSION: The version of ghc to build against. If not set
  #    the default version of haskell on travis build system in used.
  #
  # 2. CABAL_VERSION: The version of cabal install command to use. If
  #    not set the default version available is used.
  #
  # 3. PARALLEL_BUILDS: Whether the version of cabal install supports
  #    parallel builds. Set it to "yes" if the version of cabal
  #    install supports parallel builds.
  #
  # 4. PACKAGE_CONSTRAINTS: The constraints to put on packages.
  #
  # 5. HASKELL_PLATFORM: You can build against a give platform. The
  #    corresponding makefile:
  #    ./platform/${HASKELL_PLATFORM}/Makefile.configure should
  #    exist. The platform makefile should usually set the GHC_VERSION
  #    and PACKAGE_CONSTRAINTS
  #
  # 6. ADDITIONAL_CONSTRAINTS: Set additional constraints on certain
  #    problematic packages.
  global:
    # To be included in all the jobs of the build.
    - ADDITIONAL_CONSTRAINTS=
    - PARALLEL_BUILDS="yes"
  matrix:
    - CABAL_VERSION=1.18 GHC_VERSION=7.6.3
    - CABAL_VERSION=1.18 GHC_VERSION=7.8.4 STACKAGEVER=snapshot/lts-2.11
    - CABAL_VERSION=1.22 GHC_VERSION=7.10.1 STACKAGEVER=nightly
    - HLINT="yes"

matrix:
  # To notify immediately about it when a job of a build fails.
  fast_finish: true
  allow_failures:
    - env: HLINT="yes"
before_install:
  - if [ "$HLINT" == "yes" ]; then
       sudo apt-get install hlint;
       hlint "--ignore=Parse error" .;
       exit $?;
    fi
  - echo `uname -a`
  - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
  - travis_retry sudo apt-get update
  # Install default version of GHC if GHC_VERSION
  # environment variable is not set.
  - if [ "$GHC_VERSION" == "" ]; then
      travis_retry sudo apt-get install ghc happy haddock;
    else
      travis_retry sudo apt-get install ghc-$GHC_VERSION happy haddock;
      export PATH=/opt/ghc/$GHC_VERSION/bin:$PATH;
    fi
  # Install default version of CABAL if CABAL_VERSION
  # environment variable is not set.
  - if [ "$CABAL_VERSION" == "" ]; then
      travis_retry sudo apt-get install cabal-install;
      cabal update;
    else
      travis_retry sudo apt-get install cabal-install-$CABAL_VERSION;
      export PATH=/opt/cabal/$CABAL_VERSION/bin:$PATH;
      cabal-$CABAL_VERSION update;
    fi
  # if STACKAGEVER then get the corresponding configuration
  - |
    if [ -n "$STACKAGEVER" ]; then
        wget https://www.stackage.org/$STACKAGEVER/cabal.config
    fi
  - travis_retry cabal update

  # Output the version of GHC installed in the system.
  - ghc --version
  # Output the version of CABAL installed in the system.
  - cabal --version
  # Output all the registered packages.
  - ghc-pkg list
  # Output other variables.
  - echo HASKELL_PLATFORM=${HASKELL_PLATFORM}
  - echo PARALLEL_BUILDS=${PARALLEL_BUILDS}
  # # Compile the script which will be used to install, build and test
  # # raaz packages.
  # - ghc -o travis scripts/travis-build.hs

install:
 - cabal install --only-dependencies --enable-tests --enable-benchmarks

before_script:
  - cabal configure --enable-tests --enable-benchmarks -v2
  - cabal build

script:
  - cabal test --show-details=failures
  - cabal bench

after_script:
  - cabal sdist

after_success:
  - echo "All is well."
after_failure:
  - echo "Build failed."
branches:
  only:
    - master
    - use-vector
